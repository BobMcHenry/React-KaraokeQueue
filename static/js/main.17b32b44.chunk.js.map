{"version":3,"sources":["components/SearchResultItem.js","components/SearchResultsList.js","components/SearchPanel.js","components/SongQueueItem.js","components/SongQueueList.js","components/QueuePanel.js","App.js","serviceWorker.js","index.js"],"names":["SearchResultItem","_this","this","react_default","a","createElement","style","display","textAlign","padding","backgroundColor","width","marginTop","boxShadow","flex","props","song","artistName","songTitle","songLength","borderRadius","height","fontSize","onClick","singerName","addSongHandler","Component","SearchResultsList","searchResultItems","searchResults","map","SearchResultItem_SearchResultItem","paddingLeft","paddingRight","SearchPanel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","e","preventDefault","setState","toConsumableArray","songLibrary","_this2","className","borderRight","paddingBottom","type","value","fontWeight","searchSongs","SearchResultsList_SearchResultsList","SongQueueItem","singer","id","removeHandler","SongQueueList","queuedSongListItems","songQueue","SongQueueItem_SongQueueItem","key","QueuePanel","borderLeft","SongQueueList_SongQueueList","removeSongFromQueue","App","queueLength","length","addSongToQueue","bind","assertThisInitialized","undefined","concat","Math","floor","random","_this3","filter","flexDirection","margin","components_SearchPanel","QueuePanel_QueuePanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17b32b44.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class SearchResultItem extends Component {\n  render() {\n    const styles = {\n      display: 'flex',\n      textAlign: 'left',\n      padding: '8px',\n      backgroundColor: '#BBB',\n      width: 'auto',\n      marginTop: '12px',\n      boxShadow: '4px 6px #DDD'\n  }\n  const AddToQueueButtonStyles = {\n    backgroundColor: 'green',\n    borderRadius: '50px',\n    width: '75%',\n    height: '75%',\n    fontSize: 'large', \n    flex: .5\n}\n    return (\n      <div style={styles}>\n        <div style={{flex: 5}}> {this.props.song.artistName}</div>\n        <div style={{flex: 5}}>{this.props.song.songTitle}</div>\n        <div style={{flex: 5}}>{this.props.song.songLength}</div>\n        <button style={AddToQueueButtonStyles} onClick={(singerName, song) => this.props.addSongHandler(song )} >\n                        <strong>+</strong>\n                    </button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport SearchResultItem from './SearchResultItem';\nexport default class SearchResultsList extends Component {\n  \n  render() {\n    const searchResults = this.props.searchResults;\n    const searchResultItems = searchResults.map((song) => <SearchResultItem song={song} addSongHandler={this.props.addSongHandler}/>);\n    const styles = {\n        paddingLeft: '5%', paddingRight: '3%'\n\n    }\n    return (\n        <div style={styles}>\n            <ul style={{padding: '0px'}}> {searchResultItems} </ul>\n        </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport songLibrary from '../mock-data/songLibrary.json';\nimport SearchResultsList from './SearchResultsList.js';\n\nclass SearchPanel extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            searchResults: []\n        }\n    }\n\n    searchSongs(e){\n        e.preventDefault();\n        this.setState({\n            searchResults: [...songLibrary]\n        })\n    }\n\n\n\n    render() {\n        const searchPanelStyles = {\n            flex: '5',\n            borderRight: '1px #666 solid',\n            paddingRight: '10px',\n            textAlign: 'right',\n            backgroundColor: '#EEE'\n        }\n        const formStyles = {\n            paddingBottom: '10px',\n            textAlign: 'center',\n            display: 'flex',\n            padding: '10px'\n        }\n        const textBarStyles = {\n            flex: 9,\n            paddingRight: '2px',\n            padding: '10px',\n            fontSize: '1.15em'\n        }\n        const submitButtonStyles = {\n            flex: 2,\n            backgroundColor: '#00DD11',\n            borderRadius: '10px',\n            fontWeight: '700',\n            fontSize: '1.15em'\n        }\n        return (\n            <div className='searchPanel'\n                style={searchPanelStyles}>\n                <h1>Song Search</h1>\n                <form className='songSearch'\n                    style={formStyles}>\n                    <input type='text'\n                        style={textBarStyles}/>\n                    <input type='submit' value='Search' style={submitButtonStyles} onClick={(e) => this.searchSongs(e)} />\n                </form>\n                <SearchResultsList searchResults={this.state.searchResults} addSongHandler={this.props.addSongHandler}/>\n            </div>\n        )\n    }\n}\n\nexport default SearchPanel;\n","import React, {Component} from 'react'\n\nexport default class SongQueueItem extends Component {\n\n    render() {\n        const styles = {\n            display: 'flex',\n            textAlign: 'left',\n            padding: '8px',\n            backgroundColor: '#BBB',\n            width: 'auto',\n            marginTop: '12px',\n            boxShadow: '4px 6px #DDD'\n        }\n        const deleteButtonStyles = {\n            backgroundColor: 'red',\n            borderRadius: '50px',\n            width: '75%',\n            height: '75%',\n            fontSize: 'large'\n        }\n\n        const singerStyles = {\n            fontSize: 'large',\n            flex: 3\n        }\n\n        return (\n            <div style={styles}>\n                <div style={singerStyles}>\n                    <strong>Singer:</strong><br />\n                    {this.props.song.singer} \n                </div>\n\n                <div style={\n                    {flex: 3}\n                }>\n                    <strong>Song:</strong><br/> {\n                    this.props.song.songTitle\n                } </div>\n\n                <div style={\n                    {flex: 3}\n                }>\n                    <strong>Artist: </strong><br/> {\n                    this.props.song.artistName\n                } </div>\n\n                <div style={\n                    {flex: 1}\n                }>\n                    <button style={deleteButtonStyles} onClick={(id) => this.props.removeHandler(this.props.song.id)} >\n                        <strong>X</strong>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport SongQueueItem from './SongQueueItem';\n\nexport default class SongQueueList extends Component {\n\n    render() {\n        const queuedSongList = this.props.songQueue\n        const queuedSongListItems = queuedSongList.map((song) => \n            <SongQueueItem \n                key={song.id} \n                song={song} \n                removeHandler={this.props.removeHandler}/>\n        )\n\n        const styles = {\n            paddingLeft: '5%', paddingRight: '3%'\n\n        }\n        return (\n            <div style={styles}>\n                <ul style={{padding: '0px'}}> {queuedSongListItems} </ul>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport SongQueueList from './SongQueueList';\n\nexport default class QueuePanel extends Component {\n\n    render() {\n        const styles = {\n            flex: '5',\n            borderLeft: '1px #666 solid',\n            paddingRight: '10px',\n            textAlign: 'right',\n            backgroundColor: '#EEE'\n        }\n        return (\n            <div className='queuePanel'\n                style={styles}>\n                <h1>Song Queue</h1>\n                <SongQueueList songQueue={this.props.songQueue} removeHandler={this.props.removeSongFromQueue}/>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\n//Child Component Types\nimport SearchPanel from './components/SearchPanel';\nimport QueuePanel from './components/QueuePanel';\n//Mock queue data to initiate state\nimport songQueue from './mock-data/songQueue.json';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.addSongToQueue = this.addSongToQueue.bind(this, 'song');\n    this.removeSongFromQueue = this.removeSongFromQueue.bind(this)\n  }\n  state = {\n    songQueue: [...songQueue],\n    queueLength: songQueue.length\n}\n\n\n  // Event Handlers that manipulate Queue State. Songs to the queueare added from the searchPanel\n  // and removed from the queue in the Queue panel, so the state needs elevated to the parent component.\n  addSongToQueue(song){\n    if (song.singer === undefined){\n        song = {\n            singer: \"Test Value\",\n            songTitle: song.songTitle,\n            artistName: song.artistName\n        } \n    }\n\n    this.setState( (state) => ({\n        queueLength: this.state.queueLength + 1,\n        songQueue: [...this.state.songQueue, {\n            id: Math.floor(Math.random()*1000000000),\n            singer: song.singer,\n            songTitle: song.songTitle,\n            artistName: song.artistName\n        }] \n    })\n    );\n}\n\n  removeSongFromQueue(id){\n    this.setState( (state) => ({\n        queueLength: this.state.queueLength - 1,\n        songQueue: this.state.songQueue.filter(function (song) { return song.id !== id }) \n    })\n    );\n  }\n\n  render() {\n    const wrapperStyles = {\n      display: 'flex',\n      flexDirection: 'row wrap',\n      padding: '10px 2px',\n      height: '98vh',\n      width: '90vw',\n      margin: '0 auto',\n    }\n\n\n    return (\n      <div className=\"App\">\n        <div className='wrapper' style={wrapperStyles} >\n          <SearchPanel addSongHandler={this.addSongToQueue}/>\n          <QueuePanel songQueue={this.state.songQueue} removeSongFromQueue={this.removeSongFromQueue}/>\n        </div>\n      </div>\n    )}\n  }\n\n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/SearchPanel.js","components/SongQueueItem.js","components/SongQueueList.js","components/QueuePanel.js","App.js","serviceWorker.js","index.js"],"names":["SearchPanel","e","preventDefault","react_default","a","createElement","className","style","flex","borderRight","paddingRight","textAlign","backgroundColor","paddingBottom","display","padding","type","fontSize","value","borderRadius","fontWeight","onClick","this","searchSongs","Component","SongQueueItem","width","marginTop","boxShadow","props","song","singer","songTitle","artistName","height","SongQueueList","queuedSongListItems","songQueue","map","SongQueueItem_SongQueueItem","paddingLeft","QueuePanel","borderLeft","SongQueueList_SongQueueList","App","state","console","log","flexDirection","margin","components_SearchPanel","QueuePanel_QueuePanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c5016d3.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nclass SearchPanel extends Component {\n    searchSongs(e){\n        e.preventDefault();\n    }\n\n    render() {\n        const styles = {\n            flex: '5',\n            borderRight: '1px #666 solid',\n            paddingRight: '10px',\n            textAlign: 'right',\n            backgroundColor: '#EEE'\n        }\n        const formStyles = {\n            paddingBottom: '10px',\n            textAlign: 'center',\n            display: 'flex',\n            padding: '10px'\n        }\n        const textBarStyles = {\n            flex: 9,\n            paddingRight: '2px',\n            padding: '10px',\n            fontSize: '1.15em'\n        }\n        const submitButtonStyles = {\n            flex: 2,\n            backgroundColor: '#00DD11',\n            borderRadius: '10px',\n            fontWeight: '700',\n            fontSize: '1.15em'\n        }\n        return (\n            <div className='searchPanel'\n                style={styles}>\n                <h1>Song Search</h1>\n                <form className='songSearch'\n                    style={formStyles}>\n                    <input type='text'\n                        style={textBarStyles}/>\n                    <input type='submit' value='Search' style={submitButtonStyles} onClick={this.searchSongs} />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchPanel;\n","import React, {Component} from 'react'\n\nexport default class SongQueueItem extends Component {\n    render() {\n        const styles = {\n            display: 'flex',\n            textAlign: 'left',\n            padding: '8px',\n            backgroundColor: '#BBB',\n            width: 'auto',\n            marginTop: '12px',\n            boxShadow: '4px 6px #DDD'\n        }\n        const deleteButtonStyles = {\n            backgroundColor: 'red',\n            borderRadius: '50px',\n            width: '75%',\n            height: '75%',\n            fontSize: 'large'\n        }\n\n        const singerStyles = {\n            fontSize: 'large',\n            flex: 3\n        }\n\n        return (\n            <div style={styles}>\n                <div style={singerStyles}>\n                    <strong>Singer:</strong><br />\n                    {this.props.song.singer} \n                </div>\n\n                <div style={\n                    {flex: 3}\n                }>\n                    <strong>Song:</strong><br/> {\n                    this.props.song.songTitle\n                } </div>\n\n                <div style={\n                    {flex: 3}\n                }>\n                    <strong>Artist: </strong><br/> {\n                    this.props.song.artistName\n                } </div>\n\n                <div style={\n                    {flex: 1}\n                }>\n                    <button style={deleteButtonStyles}>\n                        <strong>X</strong>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport SongQueueItem from './SongQueueItem';\n\nexport default class SongQueueList extends Component {\n    render() {\n        const queuedSongList = this.props.songQueue\n        const queuedSongListItems = queuedSongList.map((song) => <SongQueueItem song={song}/>)\n        const styles = {\n            paddingLeft: '5%', paddingRight: '3%'\n\n        }\n        return (\n            <div style={styles}>\n                <ul style={{padding: '0px'}}> {queuedSongListItems} </ul>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport SongQueueList from './SongQueueList';\n\nexport default class QueuePanel extends Component {\n    render() {\n        const styles = {\n            flex: '5',\n            borderLeft: '1px #666 solid',\n            paddingRight: '10px',\n            textAlign: 'right',\n            backgroundColor: '#EEE'\n        }\n        return (\n            <div className='searchPanel'\n                style={styles}>\n                <h1>Song Queue</h1>\n                <SongQueueList songQueue={this.props.songQueue} />\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport SearchPanel from './components/SearchPanel';\nimport QueuePanel from './components/QueuePanel';\nimport songQueue from './mock-data/songQueue.json';\nimport songLibrary from './mock-data/songLibrary.json';\n\n\nclass App extends Component {\n    state = {\n        songQueue: songQueue\n    }\n\n  componentDidMount() { /*TODO: Setup DB & API */\n    console.log(this.state)\n  }\n\n  render() {\n    const wrapperStyles = {\n      display: 'flex',\n      flexDirection: 'row wrap',\n      padding: '10px 2px',\n      height: '98vh',\n      width: '90vw',\n      margin: '0 auto',\n    }\n\n    return (\n      <div className=\"App\">\n        <div className='wrapper' style={wrapperStyles} > \n          <SearchPanel/>\n          <QueuePanel songQueue={this.state.songQueue}/>\n        </div>\n      </div>\n    )}\n  }\n\n  export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/SearchResultItem.js","components/SearchResultsList.js","components/SearchPanel.js","components/SongQueueItem.js","components/SongQueueList.js","components/QueuePanel.js","components/AddSongToQueueModal.js","App.js","serviceWorker.js","index.js"],"names":["SearchResultItem","_this","this","react_default","a","createElement","style","display","textAlign","padding","backgroundColor","width","marginTop","boxShadow","flex","props","song","artistName","songTitle","songLength","borderRadius","height","fontSize","onClick","openAddSongModal","Component","SearchResultsList","searchResultItems","searchResults","map","SearchResultItem_SearchResultItem","key","id","paddingLeft","paddingRight","SearchPanel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","e","preventDefault","setState","toConsumableArray","songLibrary","_this2","className","borderRight","paddingBottom","type","value","fontWeight","searchSongs","SearchResultsList_SearchResultsList","SongQueueItem","singer","removeHandler","SongQueueList","queuedSongListItems","songQueue","SongQueueItem_SongQueueItem","QueuePanel","borderLeft","SongQueueList_SongQueueList","removeSongFromQueue","AddSongToQueueModal","appCoverUpStyle","modalVisible","position","top","left","zIndex","minWidth","minHeight","margin","marginLeft","singerName","document","getElementById","addSongToQueue","color","innerHTML","closeModalWithoutQueueing","App","songToQueue","bind","assertThisInitialized","concat","Math","floor","random","_this3","filter","modal","AddSongToQueueModal_AddSongToQueueModal","modalToggle","flexDirection","components_SearchPanel","addSongHandler","QueuePanel_QueuePanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4347f84.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class SearchResultItem extends Component {\n  render() {\n    const styles = {\n      display: 'flex',\n      textAlign: 'left',\n      padding: '8px',\n      backgroundColor: '#BBB',\n      width: 'auto',\n      marginTop: '12px',\n      boxShadow: '4px 6px #DDD'\n  }\n  const AddToQueueButtonStyles = {\n    backgroundColor: 'green',\n    borderRadius: '50px',\n    width: '75%',\n    height: '75%',\n    fontSize: 'large', \n    flex: .5\n}\n    return (\n      <div style={styles}>\n        <div style={{flex: 5}}> {this.props.song.artistName}</div>\n        <div style={{flex: 5}}>{this.props.song.songTitle}</div>\n        <div style={{flex: 5}}>{this.props.song.songLength}</div>\n        <button style={AddToQueueButtonStyles} onClick={() => this.props.openAddSongModal(this.props.song)} >\n          <strong>+</strong>\n        </button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport SearchResultItem from './SearchResultItem';\nexport default class SearchResultsList extends Component {\n  \n  render() {\n    const searchResults = this.props.searchResults;\n    const searchResultItems = searchResults.map((song) => <SearchResultItem key={song.id} song={song} openAddSongModal={this.props.openAddSongModal}/>);\n    const styles = {\n        paddingLeft: '5%', paddingRight: '3%'\n\n    }\n    return (\n        <div style={styles}>\n            <ul style={{padding: '0px'}}> {searchResultItems} </ul>\n        </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport songLibrary from '../mock-data/songLibrary.json';\nimport SearchResultsList from './SearchResultsList.js';\n\nclass SearchPanel extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            searchResults: []\n        }\n    }\n\n    searchSongs(e){\n        e.preventDefault();\n        this.setState({\n            searchResults: [...songLibrary]\n        })\n    }\n\n\n\n    render() {\n        const searchPanelStyles = {\n            flex: '5',\n            borderRight: '1px #666 solid',\n            paddingRight: '10px',\n            textAlign: 'right',\n            backgroundColor: '#EEE'\n        }\n        const formStyles = {\n            paddingBottom: '10px',\n            textAlign: 'center',\n            display: 'flex',\n            padding: '10px'\n        }\n        const textBarStyles = {\n            flex: 9,\n            paddingRight: '2px',\n            padding: '10px',\n            fontSize: '1.15em'\n        }\n        const submitButtonStyles = {\n            flex: 2,\n            backgroundColor: '#00DD11',\n            borderRadius: '10px',\n            fontWeight: '700',\n            fontSize: '1.15em'\n        }\n        return (\n            <div className='searchPanel'\n                style={searchPanelStyles}>\n                <h1>Song Search</h1>\n                <form className='songSearch'\n                    style={formStyles}>\n                    <input type='text'\n                        style={textBarStyles}/>\n                    <input type='submit' value='Search' style={submitButtonStyles} onClick={(e) => this.searchSongs(e)} />\n                </form>\n                <SearchResultsList searchResults={this.state.searchResults} openAddSongModal={this.props.openAddSongModal}/>\n            </div>\n        )\n    }\n}\n\nexport default SearchPanel;\n","import React, {Component} from 'react'\n\nexport default class SongQueueItem extends Component {\n\n    render() {\n        const styles = {\n            display: 'flex',\n            textAlign: 'left',\n            padding: '8px',\n            backgroundColor: '#BBB',\n            width: 'auto',\n            marginTop: '12px',\n            boxShadow: '4px 6px #DDD'\n        }\n        const deleteButtonStyles = {\n            backgroundColor: 'red',\n            borderRadius: '50px',\n            width: '75%',\n            height: '75%',\n            fontSize: 'large'\n        }\n\n        const singerStyles = {\n            fontSize: 'large',\n            flex: 3\n        }\n\n        return (\n            <div style={styles}>\n                <div style={singerStyles}>\n                    <strong>Singer:</strong><br />\n                    {this.props.song.singer} \n                </div>\n\n                <div style={\n                    {flex: 3}\n                }>\n                    <strong>Song:</strong><br/> {\n                    this.props.song.songTitle\n                } </div>\n\n                <div style={\n                    {flex: 3}\n                }>\n                    <strong>Artist: </strong><br/> {\n                    this.props.song.artistName\n                } </div>\n\n                <div style={\n                    {flex: 1}\n                }>\n                    <button style={deleteButtonStyles} onClick={(id) => this.props.removeHandler(this.props.song.id)} >\n                        <strong>X</strong>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport SongQueueItem from './SongQueueItem';\n\nexport default class SongQueueList extends Component {\n\n    render() {\n        const queuedSongList = this.props.songQueue\n        const queuedSongListItems = queuedSongList.map((song) => \n            <SongQueueItem \n                key={song.id} \n                song={song} \n                removeHandler={this.props.removeHandler}/>\n        )\n\n        const styles = {\n            paddingLeft: '5%', paddingRight: '3%'\n\n        }\n        return (\n            <div style={styles}>\n                <ul style={{padding: '0px'}}> {queuedSongListItems} </ul>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport SongQueueList from './SongQueueList';\n\nexport default class QueuePanel extends Component {\n\n    render() {\n        const styles = {\n            flex: '5',\n            borderLeft: '1px #666 solid',\n            paddingRight: '10px',\n            textAlign: 'right',\n            backgroundColor: '#EEE'\n        }\n        return (\n            <div className='queuePanel'\n                style={styles}>\n                <h1>Song Queue</h1>\n                <SongQueueList songQueue={this.props.songQueue} removeHandler={this.props.removeSongFromQueue}/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class AddSongToQueueModal extends Component {\n\n\n\n    render() {\n        const validateSingerNameHandler = () => {\n            const singerName = document.getElementById(\"singerNameInput\").value\n            if (singerName){ this.props.addSongToQueue(singerName) }\n            else { \n                document.getElementById('singerNameLabel').style.color = \"red\";\n                document.getElementById('singerNameLabel').style.fontWeight = \"bold\";\n                document.getElementById('singerNameLabel').innerHTML = 'Enter Singer\\'s Name (required)';\n            }\n        }\n\n        const appCoverUpStyle = {\n            display: this.props.modalVisible ? 'block' : 'none',\n            position:'absolute',\n            top:'0',\n            left:'0',\n            width:'100%',\n            height:'100%',\n            zIndex:'99',\n            backgroundColor: 'rgba(0,0,0,0.7)'\n        }\n\n        const modalPanelStyle = {\n            backgroundColor: '#DDD', \n            width: '50%', minWidth: '500px',\n            height: '30%', minHeight: '200px',\n            zIndex:'100', \n            margin:'20vh auto'\n        }\n\n        const modalHeaderStyle = {\n            textAlign: 'center', \n            padding: '30px'\n        }\n\n        const singerNameInputStyle = {\n            marginLeft: '30px',  \n            width: '55%', \n            height: '25px'\n        }\n\n        const singerNameLabelStyle = {\n            marginLeft: '30px', \n            padding: '25% 25% auto', \n            width: '60%', \n            height: '25px'}\n\n        return (\n            <div id='appCoverUp' style={appCoverUpStyle}>\n            \n                <div id='modalPanel' style={modalPanelStyle}>\n                    <h3 id='modalHeader' style={modalHeaderStyle}>\n                        Add <em>{this.props.song.songTitle}</em> by <em>{this.props.song.artistName}</em> to queue\n                    </h3>\n                    <input id='singerNameInput' style={singerNameInputStyle} />\n                    <button  id='modalSubmitButton' style={{height: '25px'}} onClick={validateSingerNameHandler}>\n                        Submit Song to Queue\n                    </button>\n                    <button  id='modalCancelButton' style={{height: '25px'}} onClick={this.props.closeModalWithoutQueueing}>\n                        Cancel\n                    </button>\n                    <br/>\n                    <p id=\"singerNameLabel\" style={singerNameLabelStyle}>\n                        Enter Singer's Name\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\n//Child Component Types\nimport SearchPanel from './components/SearchPanel';\nimport QueuePanel from './components/QueuePanel';\n//Mock queue data to initiate state\nimport songQueue from './mock-data/songQueue.json';\nimport AddSongToQueueModal from './components/AddSongToQueueModal';\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.addSongToQueue = this.addSongToQueue.bind(this);\n    this.removeSongFromQueue = this.removeSongFromQueue.bind(this)\n    this.openAddSongModal = this.openAddSongModal.bind(this)\n    this.closeModalWithoutQueueing = this.closeModalWithoutQueueing.bind(this)\n  }\n  state = {\n    songQueue: [...songQueue],\n    modalVisible: false,\n    songToQueue: null\n}\n\n\n  // Event Handlers that manipulate Queue State. Songs to the queue are added from the searchPanel\n  // and removed from the queue in the Queue panel, so the state needs elevated to the parent component.\n  addSongToQueue(singerName){\n    this.setState( (state) => ({\n        songQueue: [...this.state.songQueue, {\n            id: Math.floor(Math.random()*1000000000), //mock id format - not a good pattern for UIDs\n            singer: singerName,\n            songTitle: this.state.songToQueue.songTitle,\n            artistName: this.state.songToQueue.artistName\n        }] \n    })\n    );\n    this.closeModalWithoutQueueing()\n}\n\n  removeSongFromQueue(id){\n    this.setState( (state) => ({\n        songQueue: this.state.songQueue.filter(function (song) { return song.id !== id }) \n    })\n    );\n  }\n\n  openAddSongModal(song){\n    this.setState({\n      modalVisible: true,\n      songToQueue: song\n    })\n  }\n\n  closeModalWithoutQueueing(){\n    this.setState({\n      modalVisible: false,\n      songToQueue: {}\n    })\n  }\n\n\n  render() {\n    const wrapperStyles = {\n      display: 'flex',\n      flexDirection: 'row wrap',\n      padding: '10px 2px',\n      height: '98vh',\n      width: '90vw',\n      margin: '0 auto',\n\n    }\n    const modal =  \n      <AddSongToQueueModal \n        modalVisible={this.state.modalVisible} \n        modalToggle={this.openAddSongModal} \n        song={this.state.songToQueue}\n        singer={this.state.singerName}\n        addSongToQueue={this.addSongToQueue}\n        closeModalWithoutQueueing={this.closeModalWithoutQueueing}\n      />\n\n    return (\n      <div className=\"App\">\n       {this.state.modalVisible ? modal : null}\n        <div className='wrapper' style={wrapperStyles} >\n          <SearchPanel addSongHandler={this.addSongToQueue} openAddSongModal={this.openAddSongModal}/>\n          <QueuePanel songQueue={this.state.songQueue} removeSongFromQueue={this.removeSongFromQueue}/>\n        </div>\n      </div>\n    )}\n  }\n\n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}